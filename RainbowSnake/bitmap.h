/**
 * Bitmaps created with colors corresponding to Adafruit strip colors.
 */

uint32_t bitmap16_1[][16] = {
    {0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00},
    {0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00},
    {0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0},
    {0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0},
    {0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000},
    {0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000},
    {0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0},
    {0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0},
    {0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF},
    {0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF},
    {0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0},
    {0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0},
};

// So wasteful
uint32_t bitmap25_1[][25] = {
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x050506,0x131518,0x141619,0x14171a,0x060607,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x33252d,0x936d82,0x21181d,0x000000,0x040506,0x495d71,0x70a3cb,0x6da2cd,0x72a4cd,0x53697f,0x090b0d,0x000000,0x010101,0x0b0d0d,0x090b0b,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x030303,0x0b090a,0x070607,0x010203,0x404c59,0x7dbdee,0x16a7ff,0x0ea3ff,0x16a6ff,0x81c4f7,0x546476,0x030204,0x000000,0x040303,0x010000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x110d0f,0x815c70,0xb67e9d,0xad7f98,0x5b3146,0x3d63a0,0x49abfb,0x009dff,0x009dff,0x009dff,0x40adfd,0x4c77b6,0x244449,0x728f8f,0x77a3a3,0x5c7878,0x0d0e0e,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x110d0f,0x8a6378,0xfb7ec7,0xff5ec0,0xff7ec9,0xc1336b,0x182671,0x0172e8,0x009dff,0x009dff,0x009eff,0x017bed,0x00387e,0x1f9393,0x75f9f8,0x34fdfc,0x6bf7f6,0x678585,0x0d1010,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x6f5060,0xf97fc7,0xff45b5,0xff3fb2,0xff40b2,0xe92a81,0x561b56,0x005ed2,0x009bfe,0x009dff,0x009bff,0x005ccc,0x00546f,0x02bdbb,0x02f3f1,0x00f6f4,0x0af7f5,0x6ef7f6,0x587070,0x010000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x8d637a,0xff6bc5,0xff3fb3,0xff41b3,0xff41b4,0xfb3aa4,0x9a1956,0x0645a8,0x0092fb,0x009fff,0x008cf7,0x004393,0x018d8e,0x01e8e6,0x01f7f5,0x01f6f4,0x00f6f4,0x45fefd,0x779a9a,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x775667,0xfd8bc8,0xfd41af,0xff41b4,0xff41b3,0xff41b2,0xd32473,0x272a77,0x0081f0,0x009fff,0x0069d7,0x005373,0x01c9c6,0x01f6f4,0x01f6f4,0x01f7f5,0x03f5f3,0x7efcfc,0x759090,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x060404,0x431e2a,0xa92a5a,0xdd2575,0xf838a0,0xff41b3,0xff42b6,0xed3191,0x511b50,0x0054c3,0x006fe4,0x004096,0x046f73,0x00e0de,0x01f9f7,0x01f5f3,0x01e5e4,0x02bcbf,0x289697,0x274641,0x000000,0x000000,0x000000},
  {0x000000,0x0f0a0a,0x7f5253,0xba535a,0x7c0e1c,0x7d0f2d,0xae1852,0xe42a83,0xf239a2,0xb9548f,0x9a8f97,0x5e6e8a,0x0a1f46,0x4e5b6e,0x92a09f,0x45acac,0x02cccd,0x01abac,0x017d70,0x006c38,0x00770e,0x3da43d,0x335233,0x020302,0x000000},
  {0x090606,0x804d4f,0xf97b84,0xfd4a5a,0xe61d31,0xc31828,0x8f1121,0x820f2e,0x8c1946,0xa5999f,0xbabbba,0x8b8a88,0x282624,0x787776,0xb1afb0,0xa8adab,0x0f633d,0x007d19,0x00a302,0x00c800,0x03dd02,0x45f745,0x6be76b,0x376137,0x030403},
  {0x171010,0xc76a6f,0xff3045,0xff1d34,0xff1f36,0xfe1f36,0xf31e33,0xcd192b,0x89111e,0x806c6e,0x8e8f8f,0x9d9d9d,0x9a9a9a,0x939393,0x7b7a7b,0x7c897c,0x05a703,0x00e400,0x00ef00,0x00f200,0x00f300,0x00f300,0x1cfa1c,0x5cb45c,0x080b08},
  {0x171010,0xc5676c,0xff2b41,0xff1e35,0xff1f36,0xff1f36,0xff1f36,0xff1f37,0xd1192c,0x380f14,0x393b3b,0xcfcfcf,0xd9d9d9,0xc6c6c6,0x444344,0x101e10,0x00bb00,0x00f700,0x00f400,0x00f300,0x00f300,0x00f300,0x14f814,0x5ab55a,0x090c09},
  {0x150f0f,0xc6696e,0xff3146,0xff1e35,0xff1f36,0xfe1f36,0xf61e34,0xd7192e,0x8f121b,0x644e4e,0x838484,0xcdcdcd,0xdddddd,0xc8c8c8,0x706f70,0x646d64,0x098807,0x00cf00,0x00ec00,0x00f300,0x00f400,0x00f300,0x1af91a,0x5db75d,0x090c09},
  {0x070505,0x6e4244,0xef7980,0xf95361,0xdb1b30,0xb91628,0x891619,0x7e280a,0x8f3e03,0xa19489,0xaeafb0,0x939393,0x5e5e5f,0x868686,0x9d9c9d,0xb6b5b6,0x507a1d,0x2d8200,0x099400,0x00c600,0x02e403,0x39f839,0x6ef46e,0x417241,0x030503},
  {0x000000,0x060404,0x5d3c3d,0xa1434a,0x781513,0x802d07,0xb45100,0xe57000,0xed7c01,0xb38041,0xafadaa,0x85857f,0x19190e,0x67675e,0xb1b1b1,0x96ab78,0x83d70a,0x87e200,0x62aa00,0x2e7e00,0x098501,0x4fc04f,0x477347,0x070b07,0x000000},
  {0x000000,0x000000,0x000000,0x583913,0xc36a10,0xea7400,0xfb8700,0xff8e00,0xff9000,0xee8000,0x824a13,0x8e8a19,0xbdba1e,0xa8a41b,0x5a6f1a,0x7ed207,0x98ff00,0x97ff00,0x92f700,0x83da01,0x69a512,0x284214,0x020402,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x9a7a2e,0xffb22c,0xff8e01,0xff8e00,0xff8e00,0xff8e00,0xe46f00,0x895b06,0xdbd922,0xffff30,0xefec27,0x79880b,0x7bd200,0x97ff00,0x97ff00,0x97ff00,0x97fc04,0xbefd56,0x61743d,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x020201,0xa37e2e,0xffa216,0xff8d00,0xff8e00,0xff8f00,0xf98400,0xb05201,0x9d9113,0xf7f62b,0xffff2f,0xfaf92c,0xa5a416,0x65a401,0x94fa00,0x97ff00,0x97ff00,0x96ff00,0xafff2e,0x728a45,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x020101,0x715921,0xf7ab29,0xff9104,0xff8d00,0xfd8c01,0xe16a00,0x815005,0xcecc1e,0xfefe2e,0xffff2f,0xfefe2e,0xcec81e,0x608305,0x86e500,0x96ff00,0x96ff00,0x9aff06,0xb5f946,0x5b6e38,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x0f0c05,0x836626,0xf9ab29,0xffa217,0xffb02f,0xae580a,0x7e710d,0xecea27,0xffff2f,0xffff2f,0xffff2f,0xe5e124,0x70780a,0x7abe17,0xb8ff43,0xa8ff1f,0xb5fa44,0x718945,0x0e110a,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x0e0b04,0x725921,0x98762a,0x836727,0x45310e,0xb6b451,0xfdfc57,0xffff2e,0xffff2f,0xffff2f,0xfaf95e,0x9c9b3f,0x496021,0x93af5c,0x96b758,0x6a8141,0x0e1109,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x040504,0x7c7c54,0xf9f986,0xffff3c,0xffff37,0xffff3e,0xefef84,0x5b5b3d,0x020202,0x070804,0x0b0c07,0x030302,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x040301,0x040301,0x000000,0x000000,0x0f0f0a,0x868655,0xd2d276,0xd2d272,0xd0d074,0x747449,0x060605,0x000000,0x222815,0xd6ff87,0x333d20,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x090906,0x1d1d15,0x1d1d15,0x1c1c14,0x070705,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000}
};

/**
 * TODO: Better bitmaps
 */
/*
struct bitmap16 {
  uint32_t bitmap[][16];
  int length;
};

bitmap16 rgb;

void loadBitmaps() {
  rgb.bitmap = {
    {0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00},
    {0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00},
    {0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0},
    {0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0, 0x00FF00, 0x00FF00, 0, 0},
    {0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000},
    {0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000},
    {0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0},
    {0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0, 0xFF0000, 0xFF0000, 0, 0},
    {0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF},
    {0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF},
    {0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0},
    {0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0, 0x0000FF, 0x0000FF, 0, 0},
  };
  rgb.length = 12;
}*/
